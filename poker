from random import randint
import time
import pygame, sys

#coeur ♥ ♡
#carreau ♦ ♢
#pique ♠ ♤
#trèfle ♣ ♧

class Carte:
    def __init__(self, valeur, famille):
        self.valeur = valeur
        self.couleur = famille
        self.titre = self.nomme()
        self.signe = self.dessin()
        
    def dessin(self):
        if self.couleur == 'trefle':
            return '♣'
        if self.couleur == 'coeur':
            return '♥'
        if self.couleur == 'carreau':
            return '♦'
        if self.couleur == 'pique':
            return '♠'
        return self.couleur
        
    def nomme(self):
        if self.valeur == 1:
            return 'as'
        if self.valeur > 10:
            return ['valet', 'dame', 'roi'][self.valeur-11]
        return str(self.valeur)
    
    def montre(self):
        return self.signe + ' ' + self.titre + ' ' + self.signe
        
    def __str__(self):
        return self.titre + ' de ' + self.couleur

class Paquet:
    def __init__(self):
        self.paquet = []
        
    def remplir(self):
        for i in range(4):
            for j in range(1, 14):
                self.paquet.append(Carte(j, ['trefle', 'coeur', 'carreau', 'pique'][i]))
        
    def carte(self, n):
        return self.paquet[n]
    
    def melange(self):
        for i in range(len(self.paquet)):
            a = randint(0, len(self.paquet)-1)
            self.paquet[i], self.paquet[a] = self.paquet[a], self.paquet[i]
            
    def __str__(self):
        sol = ''
        for i in range(len(self.paquet)):
            sol += self.carte(i).__str__() + ' ; '
        return sol
    
    def ajoute(self, carte):
        self.paquet.append(carte)
        
    def pioche(self):
        return self.paquet.pop()
    
    def vider(self):
        self.paquet = []
        
#p = Paquet();p.remplir(); p.melange(); print(p.carte(0)); p.carte(0).montre()
        
def poker():
    
    paquet = Paquet()
    paquet.remplir()
    paquet.melange()
    
    Joueur1 = Paquet()
    Joueur1.ajoute(paquet.pioche())
    Joueur1.ajoute(paquet.pioche())
    print('vous avez pioché :', Joueur1)
    time.sleep(3)
    print('')
    
    Joueur2 = Paquet()
    Joueur2.ajoute(paquet.pioche())
    Joueur2.ajoute(paquet.pioche())
    
    Joueur3 = Paquet()
    Joueur3.ajoute(paquet.pioche())
    Joueur3.ajoute(paquet.pioche())
    
    Joueur4 = Paquet()
    Joueur4.ajoute(paquet.pioche())
    Joueur4.ajoute(paquet.pioche())
    
    visible = Paquet()
    paquet.pioche()
    for i in range(3):
        carte = paquet.pioche()
        time.sleep(1)
        print(carte)
        visible.ajoute(carte)
    time.sleep(1)
    print('')
    print("Sont dévoilé sur la table :", visible)
    
    for _ in range(2):
        print('')
        input('poursuivre')
        paquet.pioche()
        carte = paquet.pioche()
        print(carte)
        visible.ajoute(carte)
        time.sleep(1)
        print('')
        print('votre main :', Joueur1)
        print("Sont dévoilé sur la table :", visible)
    
def dessine(carte, x, y):
    fenetre = pygame.display.set_mode((1500, 800))
    fenetre.fill([0, 0, 0])
    pygame.init()
    pygame.key.set_repeat(10)
    impact = pygame.font.SysFont('Impact', 60)
    little_impact = pygame.font.SysFont('Impact', 30)
    pygame.draw.rect(fenetre, (255, 255, 255), (x, y, 280, 400))
    pygame.display.update()
    
    while True:
        for event in pygame.event.get() :     #routine pour pouvoir fermer «proprement» la fenêtre Pygame
            if event.type == pygame.QUIT:       
                pygame.display.quit()

    
def apparition_paire():
    p = Paquet()
    p.remplir()
    p.melange()
    echantillon = Paquet()
    echantillon.ajoute(p.pioche())
    taille = 0
    for _ in range(6):
        echantillon.ajoute(p.pioche())
        taille += 1
        for i in range(taille - 1):
            if echantillon.carte(i).valeur == echantillon.carte(taille).valeur:
                return True
    return False

def compte_frequence_paire(n):
    total = 0
    for _ in range(n):
        if apparition_paire():
            total += 1
    return total/n

tot = 3/51
for i in range(5):
    tot += (6 / (50-i) * (1-tot))
    
def f(x):
    return 4320*x*x*x + 6*x*x + 107*x + 1
